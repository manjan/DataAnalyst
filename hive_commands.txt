CREATE EXTERNAL TABLE employees
(emp_id STRING,
 fname STRING,
 lname STRING,
 address STRING,
 city STRING,
 state STRING,
 zipcode STRING,
 job_title STRING,
 email STRING,
 active STRING,
 salary STRING)
 ROW FORMAT DELIMITED
 FIELDS TERMINATED BY '\t'
 LOCATION '/dualcore/employees';



ALTER TABLE suppliers CHANGE company name STRING;

ALTER TABLE suppliers RENAME TO vendors;


CREATE TABLE ads
(
  cust_id int,
  fname string,
  lname string,
  address string,
  city string,
  state string,
  zipcode string
)
PARTITIONED BY (network TINYINT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '\t';

ALTER TABLE ads ADD PARTITION(network=1);
ALTER TABLE ads ADD PARTITION(network=2);

LOAD DATA INPATH '/dualcore/ad_data1/part-m-00000'
INTO TABLE ads
PARTITION(network=1);

LOAD DATA INPATH '/dualcore/ad_data2/part-r-00000'
INTO TABLE ads
PARTITION(network=2);

SELECT COUNT(*) from ads where network=1;
SELECT COUNT(*) from ads where network=2;

Relational Analysis

Select COUNT(*) as totals,prod_id
from order_details
GROUP BY prod_id
ORDER BY totals DESC
LIMIT 5;

Select SUM(p.price) as totals,o.order_id as orderid
from order_details o, products p
WHERE o.prod_id = p.prod_id
GROUP BY orderid
ORDER BY totals DESC
LIMIT 5;

Relational Analysis
1.
INVALIDATE METADATA;
SELECT p.name,COUNT(*) as count
from orders p, order_details o
WHERE (p.prod_id = o.prod_id)
GROUP BY p.name
ORDER BY count DESC
LIMIT 3;


2.
INVALIDATE METADATA;
SELECT o.order_id,SUM(p.cost) as total
from products p, order_details o
WHERE (p.prod_id = o.prod_id)
GROUP BY o.order_id
ORDER BY total DESC
LIMIT 3;

3.
INVALIDATE METADATA;
SELECT TO_DATE(od.order_date) as dater, SUM(p.price) as revenue,SUM(p.price - p.cost) as profit
from products p, order_details o, orders od
WHERE (p.prod_id = o.prod_id and o.order_id = od.order_id)
GROUP BY dater
ORDER BY dater;


BONUS:
INVALIDATE METADATA;
SELECT dater, revenue, profit,
RANK() OVER 
(PARTITION BY YEAR(dater),MONTH(dater) ORDER BY profit DESC) as ranks
from 
(SELECT TO_DATE(od.order_date) as dater, SUM(p.price) as revenue,SUM(p.price - p.cost) as profit from products p, order_details o, orders od
WHERE (p.prod_id = o.prod_id and o.order_id = od.order_id)
GROUP BY dater
) ads
ORDER BY dater;
